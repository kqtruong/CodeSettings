// Place your key bindings in this file to overwrite the defaults

[
    //define key binding
    { "key": "ctrl+k ctrl+k",         "command": "editor.action.defineKeybinding","when": "editorFocus" },
    //insert more cursors
    { "key": "ctrl+alt+up",           "command": "editor.action.insertCursorAbove","when": "editorTextFocus" },
    { "key": "ctrl+alt+down",         "command": "editor.action.insertCursorBelow","when": "editorTextFocus" },
//find and replace
    { "key": "f3",                    "command": "editor.action.nextMatchFindAction","when": "editorFocus" },
    { "key": "shift+f3",              "command": "editor.action.previousMatchFindAction","when": "editorFocus" },
    { "key": "ctrl+f",                "command": "actions.find" },
    { "key": "ctrl+f3",               "command": "actions.find" },
        // { "key": "ctrl+h",             "command": "editor.action.startFindReplaceAction" },
    { "key": "ctrl+shift+f",          "command": "editor.action.startFindReplaceAction" },
    { "key": "ctrl+shift+f3",         "command": "editor.action.startFindReplaceAction" },
//rename all instance of an element
    { "key": "f2",                    "command": "editor.action.rename","when": "editorTextFocus" },
    //change all of selected var
    { "key": "ctrl+f2",               "command": "editor.action.changeAll","when": "editorTextFocus" },
//delete line, copy line, cut line, and paste line
    { "key": "ctrl+backspace",        "command": "deleteWordLeft","when": "editorTextFocus" },
    { "key": "shift+backspace",       "command": "editor.action.deleteLines","when": "editorTextFocus" },
        // { "key": "shift+insert",          "command": "editor.action.clipboardPasteAction" },
        // { "key": "shift+delete",          "command": "editor.action.clipboardCutAction" },
    { "key": "ctrl+insert",           "command": "editor.action.clipboardCopyAction" },
    { "key": "insert",                "command": "editor.action.clipboardPasteAction" },
    { "key": "delete",                "command": "editor.action.deleteLines" },
    { "key": "ctrl+delete",           "command": "editor.action.clipboardCutAction","when": "editorTextFocus" },
    //select line
    { "key": "ctrl+i",                "command": "expandLineSelection","when": "editorTextFocus" },
    //redo
    { "key": "ctrl+shift+z",          "command": "redo","when": "editorTextFocus" },
    { "key": "ctrl+y",                "command": "redo","when": "editorTextFocus" },
    // add next match to selection or skip match and go to next
    { "key": "ctrl+d",                "command": "editor.action.addSelectionToNextFindMatch","when": "editorFocus" },
    { "key": "ctrl+k ctrl+d",         "command": "editor.action.moveSelectionToNextFindMatch","when": "editorFocus" },
    //right click
    // { "key": "shift+f10",             "command": "editor.action.showContextMenu","when": "editorTextFocus" },
    { "key": "f10",                   "command": "editor.action.showContextMenu","when": "editorTextFocus" },
    // quickfix, param hints, and suggestions
        // { "key": "ctrl+.",                "command": "editor.action.quickFix","when": "editorTextFocus" },
    { "key": "ctrl+shift+space",      "command": "editor.action.quickFix","when": "editorTextFocus" },
        // { "key": "ctrl+shift+space",      "command": "editor.action.triggerParameterHints","when": "editorTextFocus" },
    { "key": "shift+space",           "command": "editor.action.triggerParameterHints","when": "editorTextFocus" },
    { "key": "ctrl+space",            "command": "editor.action.triggerSuggest","when": "editorTextFocus" },
    //go to deleration, peep deleration, find all instance of use of declaration
    { "key": "f12",                   "command": "editor.action.goToDeclaration","when": "editorTextFocus" },
    { "key": "ctrl+f12",              "command": "editor.action.previewDeclaration","when": "editorTextFocus" },
    { "key": "shift+f12",             "command": "editor.action.referenceSearch.trigger","when": "editorTextFocus" },
    //indent line and go to ends of brackets
        // { "key": "ctrl+shift+]",          "command": "editor.action.jumpToBracket","when": "editorTextFocus" },
        // { "key": "ctrl+shift+[",          "command": "editor.action.jumpToBracket","when": "editorTextFocus" },
    { "key": "ctrl+]",                "command": "editor.action.indentLines","when": "editorTextFocus" },
    { "key": "ctrl+[",                "command": "editor.action.jumpToBracket","when": "editorTextFocus" },

//// Custom
    { "key": "ctrl+l a",              "command": "","when": "editorTextFocus" },
    { "key": "ctrl+l b",              "command": "","when": "editorTextFocus" },
    { "key": "ctrl+l c",              "command": "","when": "editorTextFocus" },
    { "key": "ctrl+l d",              "command": "","when": "editorTextFocus" },
    { "key": "ctrl+l e",              "command": "","when": "editorTextFocus" },
    { "key": "ctrl+l f",              "command": "","when": "editorTextFocus" },
    { "key": "ctrl+l g",              "command": "","when": "editorTextFocus" },
    { "key": "ctrl+l h",              "command": "","when": "editorTextFocus" },
    { "key": "ctrl+l i",              "command": "","when": "editorTextFocus" },
    { "key": "ctrl+l j",              "command": "","when": "editorTextFocus" },
    { "key": "ctrl+l k",              "command": "","when": "editorTextFocus" },
    { "key": "ctrl+l l",              "command": "","when": "editorTextFocus" },
    { "key": "ctrl+l m",              "command": "","when": "editorTextFocus" },
    { "key": "ctrl+l n",              "command": "","when": "editorTextFocus" },
    { "key": "ctrl+l o",              "command": "","when": "editorTextFocus" },
    { "key": "ctrl+l p",              "command": "","when": "editorTextFocus" },
    //all other Alts available
    //carry a line up or down
    { "key": "alt+down",              "command": "editor.action.moveLinesDownAction","when": "editorTextFocus" },
    { "key": "alt+up",                "command": "editor.action.moveLinesUpAction","when": "editorTextFocus" },
    //nav to where cursor was and/or up and down 5 lines
    { "key": "alt+left",              "command": "workbench.action.navigateBack" },
    { "key": "alt+right",             "command": "workbench.action.navigateForward" },
        //toggle things in find, can be used for something else
        { "key": "alt+c",             "command": "toggleFindCaseSensitive","when": "editorFocus" },
        { "key": "alt+r",             "command": "toggleFindRegex","when": "editorFocus" },
        { "key": "alt+w",             "command": "toggleFindWholeWord","when": "editorFocus" },
    //select all instances of a word
    { "key": "alt+a",                 "command": "editor.action.selectHighlights","when": "editorTextFocus" },
    //format/beautify code
    { "key": "alt+f",              "command": "editor.action.format","when": "editorTextFocus" },
        // //smart select
        // { "key": "shift+alt+right",       "command": "editor.action.smartSelect.grow","when": "editorTextFocus" },
        // { "key": "shift+alt+left",        "command": "editor.action.smartSelect.shrink","when": "editorTextFocus" },
    { "key": "alt+]",                 "command": "editor.action.smartSelect.grow","when": "editorTextFocus" },
    { "key": "alt+[",                 "command": "editor.action.smartSelect.shrink","when": "editorTextFocus" },
    //Block comment
        // { "key": "shift+alt+a",           "command": "editor.action.blockComment","when": "editorTextFocus" },
        { "key": "shift+ctrl+/",                      "command": "editor.action.blockComment","when": "editorTextFocus" },
    { "key": "alt+/",          "command": "editor.action.blockComment","when": "editorTextFocus" },
    //copy line and paste it down or up one
        // { "key": "shift+alt+down",        "command": "editor.action.copyLinesDownAction","when": "editorTextFocus" },
        // { "key": "shift+alt+up",          "command": "editor.action.copyLinesUpAction","when": "editorTextFocus" },
    { "key": "alt+=",        "command": "editor.action.copyLinesDownAction","when": "editorTextFocus" },
    { "key": "alt+-",          "command": "editor.action.copyLinesUpAction","when": "editorTextFocus" },
    //toggle sidebar positionctrl
    { "key": "alt+b",          "command": "workbench.action.toggleSidebarPosition"},
// { "key": "ctrl+k left",           "command": "workbench.action.moveActiveEditorLeft" },
// { "key": "ctrl+k right",          "command": "workbench.action.moveActiveEditorRight" },
// { "key": "ctrl+k down",           "command": "workbench.files.action.openNextWorkingFile" },
// { "key": "ctrl+k up",             "command": "workbench.files.action.openPreviousWorkingFile" },
{ "key": "ctrl+numpad_divide",           "command": "workbench.action.moveActiveEditorLeft" },
{ "key": "ctrl+numpad_multiply",          "command": "workbench.action.moveActiveEditorRight" },
{ "key": "ctrl+numpad_add",           "command": "workbench.files.action.openNextWorkingFile" },
{ "key": "ctrl+numpad_subtract",             "command": "workbench.files.action.openPreviousWorkingFile" },
{ "key": "alt+numpad_divide",           "command": "workbench.action.closeOtherEditors" },
{ "key": "alt+numpad_multiply",          "command": "workbench.action.closeAllEditors" },
{ "key": "alt+numpad_add",           "command": "workbench.action.maximizeEditor" },
{ "key": "alt+numpad_subtract",             "command": "workbench.action.evenEditorWidths" },
// - workbench.action.minimizeOtherEditors
// - workbench.action.editor.changeEOL
// - workbench.action.editor.changeEncoding
// Settings
    {"key": "ctrl+numpad_decimal",  "command": "workbench.action.openWorkspaceSettings"},
    {"key": "ctrl+numpad0",  "command": "workbench.action.openGlobalSettings"},
    {"key": "ctrl+numpad1",  "command": "workbench.action.openSnippets"},
    {"key": "ctrl+numpad2",  "command": "workbench.action.openGlobalKeybindings"},
    {"key": "ctrl+numpad3",  "command": "workbench.action.selectTheme"},
    {"key": "ctrl+numpad4",  "command": ""},
    {"key": "ctrl+numpad5",  "command": ""},
    {"key": "ctrl+numpad6",  "command": ""},
    {"key": "ctrl+numpad7",  "command": "workbench.extensions.action.installExtension"},
    {"key": "ctrl+numpad8",  "command": "workbench.extensions.action.listExtensions"},
    {"key": "ctrl+numpad9",  "command": "workbench.extensions.action.listOutdatedExtensions"},
            //increment a digit up or down
            // { "key": "ctrl+shift+.",          "command": "editor.action.inPlaceReplace.down","when": "editorTextFocus" },
            // { "key": "ctrl+shift+,",          "command": "editor.action.inPlaceReplace.up","when": "editorTextFocus" },
            { "key": "numpad_subtract",          "command": "editor.action.inPlaceReplace.down","when": "editorTextFocus" },
            { "key": "numpad_add",          "command": "editor.action.inPlaceReplace.up","when": "editorTextFocus" },
////end of custom

            //switch tab settings to focus mode from editor mode
            { "key": "ctrl+m",                "command": "editor.action.toggleTabFocusMode","when": "editorTextFocus" },

            //scroll page without moving the cursor
            { "key": "ctrl+pagedown",         "command": "scrollPageDown","when": "editorTextFocus" },
            { "key": "ctrl+pageup",           "command": "scrollPageUp","when": "editorTextFocus" },
            //select down and up like shift down and up
            { "key": "ctrl+shift+down",       "command": "cursorDownSelect","when": "editorTextFocus" },
            { "key": "ctrl+shift+up",         "command": "cursorUpSelect","when": "editorTextFocus" },
    //Find the next warning in the code
    { "key": "f8",                    "command": "editor.action.marker.next","when": "editorFocus" },
    { "key": "shift+f8",              "command": "editor.action.marker.prev","when": "editorFocus" },
    // move to end of word or whole line, ctrl left and right, same as home and end by themselves
    { "key": "ctrl+down",             "command": "cursorEnd","when": "editorTextFocus" },
    { "key": "ctrl+up",               "command": "cursorHome","when": "editorTextFocus" },
    //add blank line down or up, and line break insert
    { "key": "ctrl+enter",            "command": "editor.action.insertLineAfter","when": "editorTextFocus" },
    { "key": "shift+enter",      "command": "editor.action.insertLineBefore","when": "editorTextFocus" },
    { "key": "ctrl+shift+enter",      "command": "lineBreakInsert","when": "editorTextFocus" },
    //cycle editor
    { "key": "ctrl+`",                "command": "workbench.action.cycleEditor" },
            //breakpoint
            { "key": "f9",                    "command": "editor.debug.action.toggleBreakpoint","when": "editorTextFocus" },
            //debugging mode
            { "key": "f5",                    "command": "workbench.action.debug.continue","when": "inDebugMode" },
            { "key": "f5",                    "command": "workbench.action.debug.start","when": "!inDebugMode" },
            { "key": "shift+f11",             "command": "workbench.action.debug.stepOut","when": "inDebugMode" },
            { "key": "f10",                   "command": "workbench.action.debug.stepOver","when": "inDebugMode" },
            { "key": "shift+f5",              "command": "workbench.action.debug.stop","when": "inDebugMode" },

//close window and editor
{ "key": "ctrl+shift+w",          "command": "workbench.action.closeWindow" },
{ "key": "ctrl+w",                "command":"workbench.action.closeActiveEditor"},
{ "key": "ctrl+alt+left",         "command": "workbench.action.focusLeftEditor" },
{ "key": "ctrl+alt+right",        "command": "workbench.action.focusRightEditor" },
{ "key": "ctrl+\\",               "command": "workbench.action.splitEditor" },
{ "key": "ctrl+0",                "command": "workbench.action.focusSideBar" },
{ "key": "ctrl+1",                "command": "workbench.action.focusFirstEditor" },
{ "key": "ctrl+2",                "command": "workbench.action.focusSecondEditor" },
{ "key": "ctrl+3",                "command": "workbench.action.focusThirdEditor" },
{ "key": "ctrl+k ctrl+q",         "command": "workbench.action.closeFolder" },
{ "key": "ctrl+k ctrl+o",         "command": "workbench.action.files.openFolder" },
{ "key": "ctrl+k ctrl+r",         "command": "workbench.action.openRecent" },

// - workbench.action.reloadWindow
{ "key": "ctrl+k ctrl+p",         "command": "workbench.action.files.copyPathOfActiveFile" },
{ "key": "ctrl+k ctrl+n",         "command": "workbench.action.files.showOpenedFileInNewWindow" },
// { "key": "ctrl+k ctrl+c",         "command": "editor.action.addCommentLine","when": "editorTextFocus" },
// { "key": "ctrl+shift+c",          "command": "workbench.action.terminal.openNativeConsole" },
{ "key": "ctrl+k ctrl+c",          "command": "workbench.action.terminal.openNativeConsole" },
{ "key": "ctrl+k v",              "command": "" },
{ "key": "ctrl+k enter",          "command": "workbench.files.action.addToWorkingFiles" },
{ "key": "ctrl+k ctrl+w",         "command": "workbench.files.action.closeAllFiles" },
//file new, open, save, reveal
{ "key": "ctrl+n",                "command": "workbench.action.files.newUntitledFile" },
{ "key": "ctrl+o",                "command": "workbench.action.files.openFile" },
{ "key": "ctrl+q",                "command": "workbench.files.action.closeFile" },
{ "key": "ctrl+r",                "command": "workbench.action.files.revealActiveFileInWindows" },
{ "key": "ctrl+shift+v",          "command": "workbench.action.markdown.openPreviewSideBySide" },
{ "key": "ctrl+shift+n",          "command": "workbench.action.newWindow" },
//toggle editor windows
{ "key": "ctrl+shift+tab",        "command": "workbench.action.openPreviousEditor" },
{ "key": "ctrl+tab",              "command": "workbench.action.openPreviousEditor" },
{ "key": "ctrl+e",                "command": "workbench.action.quickOpen" },
{ "key": "ctrl+e",                "command": "workbench.action.quickOpenNavigateNext","when": "inQuickOpen" },
{ "key": "ctrl+p",                "command": "workbench.action.quickOpen" },
{ "key": "ctrl+p",                "command": "workbench.action.quickOpenNavigateNext","when": "inQuickOpen" },
{ "key": "f1",                    "command": "workbench.action.showCommands" },
{ "key": "f1",                    "command": "workbench.action.quickOpenNavigateNext","when": "inQuickOpen" },
{ "key": "ctrl+shift+p",          "command": "workbench.action.showCommands" },
{ "key": "ctrl+shift+p",          "command": "workbench.action.quickOpenNavigateNext","when": "inQuickOpen" },

{ "key": "ctrl+shift+u",          "command": "workbench.action.output.toggleOutput" },
    //not sure what this does
    { "key": "ctrl+shift+j",          "command": "workbench.action.search.toggleQueryDetails","when": "searchViewletVisible" },

{ "key": "ctrl+g",                "command": "workbench.action.gotoLine" },
{ "key": "ctrl+shift+o",          "command": "workbench.action.gotoSymbol" },
{ "key": "ctrl+t",                "command": "workbench.action.showAllSymbols" },

{ "key": "ctrl+shift+m",          "command": "workbench.action.showErrorsWarnings" },
{ "key": "ctrl+shift+b",          "command": "workbench.action.tasks.build" },
{ "key": "ctrl+shift+t",          "command": "workbench.action.tasks.test" },

{ "key": "ctrl+shift+d",          "command": "workbench.view.debug" },
{ "key": "ctrl+shift+e",          "command": "workbench.view.explorer" },
{ "key": "ctrl+shift+g",          "command": "workbench.view.git" },
{ "key": "ctrl+shift+f",          "command": "workbench.view.search" },
//save files
{ "key": "ctrl+s",                "command": "workbench.action.files.save" },
{ "key": "ctrl+shift+s",          "command": "workbench.action.files.saveAll" },
{ "key": "ctrl+alt+s",            "command": "workbench.action.files.saveAs" },


{ "key": "f11",                   "command": "workbench.action.debug.stepInto","when": "inDebugMode" },

{ "key": ".",                     "command": "^acceptSelectedSuggestion","when": "editorTextFocus && suggestWidgetVisible && editorLangId == 'typescript' && suggestionSupportsAcceptOnKey" },
{ "key": ".",                     "command": "^acceptSelectedSuggestion","when": "editorTextFocus && suggestWidgetVisible && editorLangId == 'csharp' && suggestionSupportsAcceptOnKey" }//for different languages too
//not used
// { "key": "ctrl+l l",              "command": "o.showOutput" },
// { "key": "ctrl+l shift+r",        "command": "o.execute" },
// { "key": "ctrl+l r",              "command": "o.execute-last-command" },
// { "key": "ctrl+shift+x",          "command": "editor.action.trimTrailingWhitespace","when": "editorTextFocus" },
// { "key": "ctrl+shift+k",          "command": "","when": "editorTextFocus" },
// { "key": "ctrl+shift+l",          "command": "","when": "editorFocus" },
// { "key": "shift+alt+f",           "command": "","when": "editorTextFocus" },
// { "key": "shift+f",               "command": "","when": "editorTextFocus" },
// { "key": "ctrl+k s",              "command": "","when": "editorTextFocus"},
// { "key": "ctrl+k ctrl+u",         "command": "","when": "editorTextFocus" }
]

//accepted keyboard rules
    // f1-f19, a-z, 0-9
    // `, -, =, [, ], \, ;, ', ,, ., /
    // left, up, right, down, pageup, pagedown, end, home
    // tab, enter, escape, space, backspace, delete
    // pausebreak, capslock, insert
    // numpad0-numpad9, numpad_multiply, numpad_add,
    // numpad_subtract, numpad_decimal, numpad_divide


// Here are other available commands:
//Save All 	workbench.action.files.saveAll
// - workbench.action.markdown.togglePreview
// - deleteAllLeft
// - deleteAllRight
// - editor.action.openLink
// - editor.action.findReferences
// - editor.action.showReferences
// - editor.action.goToTypeDeclaration



// - workbench.action.files.saveFiles
// - workbench.action.files.revert
// - workbench.action.files.newFolder
// - workbench.files.action.compareFileWith

//git
// - workbench.git.action.globalOpenChange
// - workbench.action.pull
// - workbench.action.push
// - workbench.action.sync
// - workbench.action.publish
// - workbench.action.git.startGitBranch
// - workbench.action.git.startGitCheckout

// - workbench.action.markdown.showWelcome
// - workbench.action.output.showOutput
// - editor.action.clearoutput
// - workbench.action.tasks.terminate
// - workbench.action.tasks.configureTaskRunner
// - workbench.action.tasks.showLog
// - workbench.action.tasks.runTask

// - editor.debug.action.selectionToRepl
// - editor.debug.action.selectionToWatch
// - editor.debug.action.runToCursor
// - workbench.action.debug.restart
// - workbench.action.debug.pause
// - workbench.action.debug.configure
// - workbench.debug.action.openRepl

// - workbench.action.toggleDevTools
// - workbench.action.zoomReset
// - workbench.action.appPerf
// - workbench.action.files.toggleAutoSave

// - vscode.executeWorkspaceSymbolProvider
// - vscode.executeDefinitionProvider
// - vscode.executeHoverProvider
// - vscode.executeDocumentHighlights
// - vscode.executeReferenceProvider
// - vscode.executeDocumentRenameProvider
// - vscode.executeSignatureHelpProvider
// - vscode.executeDocumentSymbolProvider
// - vscode.executeCompletionItemProvider
// - vscode.executeCodeActionProvider
// - vscode.executeCodeLensProvider
// - vscode.executeFormatDocumentProvider
// - vscode.executeFormatRangeProvider
// - vscode.executeFormatOnTypeProvider